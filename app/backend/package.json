{
  "name": "linkdao-backend",
  "version": "1.0.0",
  "description": "LinkDao Web3 Marketplace Backend",
  "main": "src/index.production.js",
  "scripts": {
    "build": "tsc --project tsconfig.json || echo 'TypeScript compilation failed, using fallback'",
    "start": "node --max-old-space-size=450 --optimize-for-size -r ts-node/register src/index.ts",
    "start:compiled": "node --max-old-space-size=450 --optimize-for-size dist/index.js",
    "start:optimized": "node --max-old-space-size=450 --optimize-for-size src/index.production.optimized.js",
    "start:ts": "node --max-old-space-size=1024 --optimize-for-size -r ts-node/register src/index.ts",
    "dev": "ts-node --transpileOnly src/index.ts",
    "simple": "node src/index.simple.js",
    "database": "node src/index.database.js",
    "migrate": "ts-node src/scripts/migrate.ts",
    "migrate:production": "ts-node src/scripts/production-migrate.ts",
    "seed:production": "ts-node src/scripts/seed-production-data.ts",
    "validate:communities": "ts-node scripts/validate-community-data.ts",
    "cleanup:communities": "ts-node scripts/validate-community-data.ts --cleanup",
    "backup": "ts-node src/scripts/database-backup.ts",
    "backup:schema": "ts-node src/scripts/database-backup.ts schema",
    "backup:full": "ts-node src/scripts/database-backup.ts full",
    "backup:restore": "ts-node src/scripts/database-backup.ts restore",
    "backup:list": "ts-node src/scripts/database-backup.ts list",
    "deploy:db": "ts-node src/scripts/deploy-production-database.ts",
    "health": "curl -f http://localhost:${PORT:-10000}/health || exit 1",
    "memory:check": "node scripts/check-memory.js",
    "test": "jest",
    "test:infrastructure": "jest --config jest.infrastructure.config.js --runInBand",
    "test:infrastructure:cache": "ts-node src/tests/infrastructure/runInfrastructureTests.ts cache",
    "test:infrastructure:api": "ts-node src/tests/infrastructure/runInfrastructureTests.ts api",
    "test:infrastructure:websocket": "ts-node src/tests/infrastructure/runInfrastructureTests.ts websocket",
    "test:infrastructure:database": "ts-node src/tests/infrastructure/runInfrastructureTests.ts database",
    "test:infrastructure:all": "./scripts/run-infrastructure-tests.sh all",
    "test:integration": "./scripts/run-integration-tests.sh",
    "test:integration:verbose": "./scripts/run-integration-tests.sh --verbose",
    "test:integration:coverage": "./scripts/run-integration-tests.sh --coverage",
    "test:integration:auth": "./scripts/run-integration-tests.sh --suite auth",
    "test:integration:marketplace": "./scripts/run-integration-tests.sh --suite marketplace",
    "test:integration:parallel": "./scripts/run-integration-tests.sh --parallel",
    "test:integration:watch": "./scripts/run-integration-tests.sh --watch",
    "test:api-docs": "ts-node src/tests/integration/testRunner.ts --suite api",
    "test:infrastructure:verbose": "./scripts/run-infrastructure-tests.sh all --verbose",
    "test:marketplace": "ts-node src/tests/marketplaceEnhancements/testRunner.ts",
    "test:marketplace:unit": "ts-node src/tests/marketplaceEnhancements/testRunner.ts --unit",
    "test:marketplace:integration": "ts-node src/tests/marketplaceEnhancements/testRunner.ts --integration",
    "test:marketplace:e2e": "ts-node src/tests/marketplaceEnhancements/testRunner.ts --e2e",
    "test:performance": "jest --config jest.performance.config.js --runInBand",
    "test:performance:verbose": "jest --config jest.performance.config.js --runInBand --verbose",
    "test:fixtures": "jest --testPathPattern=fixtures --verbose",
    "seed:test": "node scripts/seed-test-data.js",
    "seed:test:minimal": "node scripts/seed-test-data.js minimal",
    "seed:test:comprehensive": "node scripts/seed-test-data.js comprehensive",
    "seed:test:clean": "node scripts/seed-test-data.js clean",
    "seed:marketplace": "ts-node scripts/seedDatabase.ts",
    "seed:marketplace:large": "ts-node scripts/seedDatabase.ts --users=50 --sellers=20 --products=150 --orders=100",
    "test:seller-e2e": "./scripts/run-seller-e2e-tests.sh",
    "test:seller-e2e:ci": "./scripts/run-seller-e2e-tests.sh --workers 1 --timeout 1200"
  },
  "dependencies": {
    "@types/express-fileupload": "^1.5.1",
    "@types/joi": "^17.2.2",
    "@types/multer": "^2.0.0",
    "@types/socket.io": "^3.0.1",
    "@uniswap/sdk-core": "^5.3.1",
    "@uniswap/smart-order-router": "^3.47.1",
    "@uniswap/v3-periphery": "^1.4.4",
    "@uniswap/v3-sdk": "^3.13.1",
    "aws-sdk": "^2.1692.0",
    "axios": "^1.12.2",
    "cheerio": "^1.1.2",
    "compression": "^1.7.4",
    "cors": "^2.8.5",
    "dotenv": "^16.3.1",
    "drizzle-orm": "^0.44.5",
    "ethers": "^6.8.1",
    "express": "^4.18.2",
    "express-fileupload": "^1.5.2",
    "express-rate-limit": "^8.1.0",
    "express-validator": "^7.2.1",
    "firebase-admin": "^13.5.0",
    "helmet": "^7.1.0",
    "ioredis": "^5.8.2",
    "ipfs-http-client": "^60.0.1",
    "isomorphic-dompurify": "^2.29.0",
    "joi": "^17.13.3",
    "jsonwebtoken": "^8.5.1",
    "marked": "^12.0.2",
    "multer": "^2.0.2",
    "openai": "^6.6.0",
    "pg": "^8.16.3",
    "postgres": "^3.4.3",
    "redis": "^5.8.2",
    "resend": "^6.2.0",
    "socket.io": "^4.8.1",
    "stripe": "^14.21.0",
    "ts-node": "^10.9.1",
    "typescript": "^5.2.2",
    "xss": "^1.0.15",
    "zod": "^3.22.4"
  },
  "devDependencies": {
    "@faker-js/faker": "^10.0.0",
    "@types/compression": "^1.7.5",
    "@types/cors": "^2.8.17",
    "@types/express": "^4.17.20",
    "@types/helmet": "^4.0.0",
    "@types/jest": "^29.5.14",
    "@types/jsonwebtoken": "^8.5.9",
    "@types/marked": "^6.0.0",
    "@types/node": "^20.19.23",
    "@types/pg": "^8.15.5",
    "@types/stripe": "^8.0.417",
    "@types/supertest": "^6.0.3",
    "drizzle-kit": "^0.19.13",
    "ioredis-mock": "^8.13.0",
    "jest": "^29.7.0",
    "jest-junit": "^16.0.0",
    "socket.io-client": "^4.8.1",
    "supertest": "^7.1.4",
    "ts-jest": "^29.1.1"
  },
  "engines": {
    "node": ">=18.0.0"
  }
}
