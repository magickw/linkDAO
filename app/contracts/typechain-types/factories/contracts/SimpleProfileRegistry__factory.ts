/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  SimpleProfileRegistry,
  SimpleProfileRegistryInterface,
} from "../../contracts/SimpleProfileRegistry";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "handle",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "createdAt",
        type: "uint256",
      },
    ],
    name: "ProfileCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "addressToTokenId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "handle",
        type: "string",
      },
      {
        internalType: "string",
        name: "avatarCid",
        type: "string",
      },
    ],
    name: "createProfile",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getProfileByAddress",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "handle",
            type: "string",
          },
          {
            internalType: "string",
            name: "avatarCid",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "createdAt",
            type: "uint256",
          },
        ],
        internalType: "struct SimpleProfileRegistry.Profile",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "profiles",
    outputs: [
      {
        internalType: "string",
        name: "handle",
        type: "string",
      },
      {
        internalType: "string",
        name: "avatarCid",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "createdAt",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60803462000359576001600160401b039060408181018381118382101762000343578152600d82526020916c53696d706c6550726f66696c6560981b8382015281519382850185811082821117620003435783526002855261053560f41b84860152815181811162000343576000948554916001948584811c9416801562000338575b8385101462000324578190601f94858111620002d1575b5083908583116001146200026d57899262000261575b5050600019600383901b1c191690851b1786555b86519283116200024d5783548481811c9116801562000242575b828210146200022e57828111620001e6575b50809183116001146200017f57508495829394959262000173575b5050600019600383901b1c191690821b1790555b60068054336001600160a01b03198216811790925591519290916001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a361173890816200035f8239f35b0151905038806200010a565b90601f198316968487528287209287905b898210620001ce575050838596979810620001b4575b505050811b0190556200011e565b015160001960f88460031b161c19169055388080620001a6565b80878596829496860151815501950193019062000190565b8487528187208380860160051c82019284871062000224575b0160051c019085905b82811062000218575050620000ef565b88815501859062000208565b92508192620001ff565b634e487b7160e01b87526022600452602487fd5b90607f1690620000dd565b634e487b7160e01b86526041600452602486fd5b015190503880620000af565b898052848a208894509190601f1984168b5b87828210620002ba5750508411620002a0575b505050811b018655620000c3565b015160001960f88460031b161c1916905538808062000292565b8385015186558b979095019493840193016200027f565b9091508880528389208580850160051c8201928686106200031a575b918991869594930160051c01915b8281106200030b57505062000099565b8b8155859450899101620002fb565b92508192620002ed565b634e487b7160e01b88526022600452602488fd5b93607f169362000082565b634e487b7160e01b600052604160045260246000fd5b600080fdfe608080604052600436101561001357600080fd5b60003560e01c90816301ffc9a714610e795750806306fdde0314610de9578063081812fc14610dcb578063095ea7b314610c5157806323b872dd14610c2d57806342842e0e14610bfa5780634cd6959c14610b2f5780636352211e14610aff5780636511bf2e14610ac557806370a0823114610a2e578063715018a6146109e35780638da5cb5b146109ba57806395d89b41146108f4578063a22cb46514610826578063b88d4fde146107a4578063ba1feb8a146102d4578063c36fe3d614610265578063c87b56dd14610207578063e985e9c5146101b15763f2fde38b146100fb57600080fd5b346101ac5760203660031901126101ac57610114610f24565b61011c6113e4565b6001600160a01b0390811690811561015857600680546001600160a01b031981168417909155166000805160206116c3833981519152600080a3005b60405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608490fd5b600080fd5b346101ac5760403660031901126101ac576101ca610f24565b6101d2610f3a565b9060018060a01b03809116600052600560205260406000209116600052602052602060ff604060002054166040519015158152f35b346101ac5760203660031901126101ac5761022b6102266004356114b3565b6111b6565b600060405161023981610fa0565b5261026160405161024981610fa0565b60008152604051918291602083526020830190610ee4565b0390f35b346101ac5760203660031901126101ac5760043560005260096020526102bc604060002061029281611088565b906102ca60026102a460018401611088565b92015491604051948594606086526060860190610ee4565b908482036020860152610ee4565b9060408301520390f35b346101ac5760403660031901126101ac576004356001600160401b0381116101ac57610304903690600401611030565b6024356001600160401b0381116101ac57610323903690600401611030565b9080511561076d5733600052600860205260406000205461073757600754906000198214610721576001820160075560405161035e81610fa0565b6000815233156106dd576103eb6103f09161038461037e600187016114b3565b15611677565b61039361037e600187016114b3565b33600052600360205260406000206001815401905560018501600052600260205260406000203360018060a01b0319825416179055600185013360006000805160206116e38339815191528180a460018501336114d0565b61148f565b336000526008602052600182016040600020556040519261041084610f85565b81845260208401524260408401526001820160005260096020526040600020835180519060018060401b03821161060057819061044d845461104e565b601f811161068d575b50602090601f831160011461062157600092610616575b50508160011b916000199060031b1c19161781555b6020840151805190949060018301906001600160401b038111610600576104a9825461104e565b96601f88116105b8575b602097508790601f831160011461054c5791806040949260029694600092610541575b50508160011b916000199060031b1c19161790555b015191015561050560405191604083526040830190610ee4565b42848301527f3a839c8754a5aa044f5708b62e409fe53d74a6e90a345b69e9ac8a20cf8a468160018401928033930390a3600160405191018152f35b015190508a806104d6565b90601f1983169184600052896000209260005b8181106105a15750926001928592600298966040989610610588575b505050811b0190556104eb565b015160001960f88460031b161c191690558a808061057b565b92938b60018192878601518155019501930161055f565b826000526020600020601f830160051c810198602084106105f6575b601f0160051c01975b8881106105ea57506104b3565b600081556001016105dd565b90985088906105d4565b634e487b7160e01b600052604160045260246000fd5b01519050868061046d565b9250836000526020600020906000935b601f1984168510610672576001945083601f19811610610659575b505050811b018155610482565b015160001960f88460031b161c1916905586808061064c565b81810151835560209485019460019093019290910190610631565b909150836000526020600020601f840160051c8101602085106106d6575b90849392915b601f830160051c820181106106c7575050610456565b600081558594506001016106b1565b50806106ab565b606460405162461bcd60e51b815260206004820152602060248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152fd5b634e487b7160e01b600052601160045260246000fd5b60405162461bcd60e51b815260206004820152600e60248201526d50726f66696c652065786973747360901b6044820152606490fd5b60405162461bcd60e51b815260206004820152600f60248201526e12185b991b19481c995c5d5a5c9959608a1b6044820152606490fd5b346101ac5760803660031901126101ac576107bd610f24565b6107c5610f3a565b90606435906044356001600160401b0383116101ac57366023840112156101ac57610824936108016103eb943690602481600401359101610ff9565b9261081461080f8433611220565b611154565b61081f8383836112e8565b6115ee565b005b346101ac5760403660031901126101ac5761083f610f24565b602435908115158092036101ac576001600160a01b0316903382146108b357336000526005602052604060002082600052602052604060002060ff1981541660ff83161790556040519081527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3160203392a3005b60405162461bcd60e51b815260206004820152601960248201527822a9219b99189d1030b8383937bb32903a379031b0b63632b960391b6044820152606490fd5b346101ac5760003660031901126101ac5760405160006001826001549261091a8461104e565b928383526020948560018216918260001461099a57505060011461095a575b5061094692500383610fbb565b610261604051928284938452830190610ee4565b849150600160005281600020906000915b858310610982575050610946935082010185610939565b8054838901850152879450869390920191810161096b565b60ff19168582015261094695151560051b85010192508791506109399050565b346101ac5760003660031901126101ac576006546040516001600160a01b039091168152602090f35b346101ac5760003660031901126101ac576109fc6113e4565b600680546001600160a01b031981169091556000906001600160a01b03166000805160206116c38339815191528280a3005b346101ac5760203660031901126101ac576001600160a01b03610a4f610f24565b168015610a6e5760005260036020526020604060002054604051908152f35b60405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b6064820152608490fd5b346101ac5760203660031901126101ac576001600160a01b03610ae6610f24565b1660005260086020526020604060002054604051908152f35b346101ac5760203660031901126101ac576020610b1d6004356111fd565b6040516001600160a01b039091168152f35b346101ac576020806003193601126101ac57606090610b4c610f24565b600060408051610b5b81610f85565b8581528585820152015260018060a01b03166000526008815260406000205460005260098152604060002090610bef60405192610b9784610f85565b610ba081611088565b8452610bdc6002610bb360018401611088565b928587019384520154936040860194855260405196879682885251918701526080860190610ee4565b9051848203601f19016040860152610ee4565b905160608301520390f35b346101ac576108246103eb610c0e36610f50565b9060405192610c1c84610fa0565b6000845261081461080f8433611220565b346101ac57610824610c3e36610f50565b91610c4c61080f8433611220565b6112e8565b346101ac5760403660031901126101ac57610c6a610f24565b602435906001600160a01b038080610c81856111fd565b16921691808314610d7c57803314908115610d57575b5015610cec57600083815260046020526040902080546001600160a01b03191683179055610cc4836111fd565b167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925600080a4005b60405162461bcd60e51b815260206004820152603d60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c0000006064820152608490fd5b9050600052600560205260406000203360005260205260ff6040600020541684610c97565b60405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b6064820152608490fd5b346101ac5760203660031901126101ac576020610b1d60043561112d565b346101ac5760003660031901126101ac57604051600080549082610e0c8361104e565b918282526020936001908560018216918260001461099a575050600114610e3a575061094692500383610fbb565b8491506000805281600020906000915b858310610e61575050610946935082010185610939565b80548389018501528794508693909201918101610e4a565b346101ac5760203660031901126101ac576004359063ffffffff60e01b82168092036101ac576020916380ac58cd60e01b8114908115610ed3575b8115610ec2575b5015158152f35b6301ffc9a760e01b14905083610ebb565b635b5e139f60e01b81149150610eb4565b919082519283825260005b848110610f10575050826000602080949584010152601f8019910116010190565b602081830181015184830182015201610eef565b600435906001600160a01b03821682036101ac57565b602435906001600160a01b03821682036101ac57565b60609060031901126101ac576001600160a01b039060043582811681036101ac579160243590811681036101ac579060443590565b606081019081106001600160401b0382111761060057604052565b602081019081106001600160401b0382111761060057604052565b601f909101601f19168101906001600160401b0382119082101761060057604052565b6001600160401b03811161060057601f01601f191660200190565b92919261100582610fde565b916110136040519384610fbb565b8294818452818301116101ac578281602093846000960137010152565b9080601f830112156101ac5781602061104b93359101610ff9565b90565b90600182811c9216801561107e575b602083101461106857565b634e487b7160e01b600052602260045260246000fd5b91607f169161105d565b9060405191826000825461109b8161104e565b9081845260209460019160018116908160001461110b57506001146110cc575b5050506110ca92500383610fbb565b565b600090815285812095935091905b8183106110f35750506110ca93508201013880806110bb565b855488840185015294850194879450918301916110da565b925050506110ca94925060ff191682840152151560051b8201013880806110bb565b611139610226826114b3565b6000908152600460205260409020546001600160a01b031690565b1561115b57565b60405162461bcd60e51b815260206004820152602d60248201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560448201526c1c881bdc88185c1c1c9bdd9959609a1b6064820152608490fd5b156111bd57565b60405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b6044820152606490fd5b6000908152600260205260409020546001600160a01b031661104b8115156111b6565b906001600160a01b038080611234846111fd565b16931691838314938415611267575b508315611251575b50505090565b61125d9192935061112d565b161438808061124b565b909350600052600560205260406000208260005260205260ff604060002054169238611243565b1561129557565b60405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b6064820152608490fd5b90611310916112f6846111fd565b6001600160a01b039391841692849290918316841461128e565b16918215611393578161132d91611326866111fd565b161461128e565b6000805160206116e3833981519152600084815260046020526040812060018060a01b03199081815416905583825260036020526040822060001981540190558482526040822060018154019055858252600260205284604083209182541617905580a4565b60405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608490fd5b6006546001600160a01b031633036113f857565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b60809060208152603260208201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b60608201520190565b1561149657565b60405162461bcd60e51b8152806114af6004820161143c565b0390fd5b6000908152600260205260409020546001600160a01b0316151590565b91929091803b156115e55761151d936040519081630a85bd0160e11b9384825233600483015260009687602484015260448301526080606483015281878160209a8b966084830190610ee4565b03926001600160a01b03165af18491816115a1575b50611590575050503d600014611588573d61154c81610fde565b9061155a6040519283610fbb565b81528091833d92013e5b805191826115855760405162461bcd60e51b8152806114af6004820161143c565b01fd5b506060611564565b6001600160e01b0319161492509050565b9091508581813d83116115de575b6115b98183610fbb565b810103126115da57516001600160e01b0319811681036115da579038611532565b8480fd5b503d6115af565b50915050600190565b9293919290803b1561166d576116429460018060a01b039460405192839187630a85bd0160e11b9687855233600486015216602484015260448301526080606483015281806020998a956084830190610ee4565b03916000988991165af18491816115a15750611590575050503d600014611588573d61154c81610fde565b5050915050600190565b1561167e57565b60405162461bcd60e51b815260206004820152601c60248201527b115490cdcc8c4e881d1bdad95b88185b1c9958591e481b5a5b9d195960221b6044820152606490fdfe8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa26469706673582212203dcc3f8729a87d879d375a8ce3f4a6dc874ff7ba474d16783e231e2d47a89e2f64736f6c63430008180033";

type SimpleProfileRegistryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SimpleProfileRegistryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SimpleProfileRegistry__factory extends ContractFactory {
  constructor(...args: SimpleProfileRegistryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<SimpleProfileRegistry> {
    return super.deploy(overrides || {}) as Promise<SimpleProfileRegistry>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): SimpleProfileRegistry {
    return super.attach(address) as SimpleProfileRegistry;
  }
  override connect(signer: Signer): SimpleProfileRegistry__factory {
    return super.connect(signer) as SimpleProfileRegistry__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SimpleProfileRegistryInterface {
    return new utils.Interface(_abi) as SimpleProfileRegistryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SimpleProfileRegistry {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as SimpleProfileRegistry;
  }
}
