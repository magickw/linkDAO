/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { TipRouter, TipRouterInterface } from "../../contracts/TipRouter";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_ldao",
        type: "address",
      },
      {
        internalType: "address",
        name: "_rewardPool",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "postId",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "fee",
        type: "uint256",
      },
    ],
    name: "Tipped",
    type: "event",
  },
  {
    inputs: [],
    name: "feeBps",
    outputs: [
      {
        internalType: "uint96",
        name: "",
        type: "uint96",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ldao",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "postId",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "creator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "permitAndTip",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardPool",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint96",
        name: "_bps",
        type: "uint96",
      },
    ],
    name: "setFeeBps",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "postId",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "creator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "tip",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a0346100d157601f61086038819003918201601f19168301916001600160401b038311848410176100d65780849260409485528339810103126100d157610052602061004b836100ec565b92016100ec565b60008054336001600160a01b0319821681178355604051946001600160a01b03949385939192918416907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a31660805216607d60a31b1760015561075f90816101018239608051818181610255015281816104b501526105e60152f35b600080fd5b634e487b7160e01b600052604160045260246000fd5b51906001600160a01b03821682036100d15756fe608060408181526004908136101561001657600080fd5b600092833560e01c9081630cc89a07146105d25750806324a9d853146105b057838163485aa4351461047b5750806366666aa914610452578063715018a6146104075780637f602231146102035780638da5cb5b146101d7578063b7f1564e146101465763f2fde38b1461008957600080fd5b34610142576020366003190112610142576001600160a01b0382358181169391929084900361013d576100ba6106b1565b83156100eb5750506000548260018060a01b03198216176000551660008051602061070a833981519152600080a380f35b906020608492519162461bcd60e51b8352820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152fd5b600080fd5b8280fd5b509034610142576020366003190112610142578035916001600160601b0383168084036101d3576107d0906101796106b1565b116101a6575050600180546001600160a01b031660a09290921b6001600160a01b03191691909117905580f35b906020606492519162461bcd60e51b835282015260076024820152666d61782032302560c81b6044820152fd5b8480fd5b8382346101ff57816003193601126101ff57905490516001600160a01b039091168152602090f35b5080fd5b5090346101425760603660031901126101425761021e610615565b6044359060015460a01c8083029083820414831517156103f457612710900490818303918383116103e1578160018060a01b0393847f00000000000000000000000000000000000000000000000000000000000000001690885188818c818061029a6323b872dd60e01b9788835260209a8b973390850161068f565b0391875af19081156103d7578b916103ba575b501561038757888492898c86946102d68b6001541695519788968795869485523390850161068f565b03925af190811561037d578991610350575b50156103235786519485528401521692339235917f46ded6c3938a4e061e87f23b5be742c9d973748afa69dee7625aa15d2e2ddc729190a480f35b8560649188519162461bcd60e51b835282015260086024820152671999594819985a5b60c21b6044820152fd5b6103709150823d8411610376575b6103688183610654565b810190610677565b386102e8565b503d61035e565b88513d8b823e3d90fd5b885162461bcd60e51b8152808901849052600d60248201526c1d1c985b9cd9995c8819985a5b609a1b6044820152606490fd5b6103d19150843d8611610376576103688183610654565b386102ad565b8a513d8d823e3d90fd5b634e487b7160e01b875260118552602487fd5b634e487b7160e01b865260118452602486fd5b833461044f578060031936011261044f576104206106b1565b600080546001600160a01b0319811682556001600160a01b031660008051602061070a8339815191528280a380f35b80fd5b8382346101ff57816003193601126101ff5760015490516001600160a01b039091168152602090f35b808484346105ac5760e03660031901126105ac57610497610615565b604435906084359060ff8216809203610586576001600160a01b03917f00000000000000000000000000000000000000000000000000000000000000008316803b156105a85760e4889287519a8b93849263d505accf60e01b8452338c8501523060248501528960448501526064356064850152608484015260a43560a484015260c43560c48401525af1801561059e5761058a575b859650303b1561058657835194637f60223160e01b86528035908601521660248401526044830152828260648183305af190811561057d575061056d5750f35b6105769061062b565b61044f5780f35b513d84823e3d90fd5b8580fd5b9490956105969061062b565b93859061052d565b84513d88823e3d90fd5b8780fd5b5050fd5b8382346101ff57816003193601126101ff5760209060015460a01c9051908152f35b8490346101ff57816003193601126101ff577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b602435906001600160a01b038216820361013d57565b6001600160401b03811161063e57604052565b634e487b7160e01b600052604160045260246000fd5b601f909101601f19168101906001600160401b0382119082101761063e57604052565b9081602091031261013d5751801515810361013d5790565b6001600160a01b03918216815291166020820152604081019190915260600190565b6000546001600160a01b031633036106c557565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fdfe8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0a26469706673582212208054fed37a11caf03dd0bf9fcca601223fd82285b02b89cb36191b2bc0c6854864736f6c63430008180033";

type TipRouterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TipRouterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TipRouter__factory extends ContractFactory {
  constructor(...args: TipRouterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _ldao: PromiseOrValue<string>,
    _rewardPool: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<TipRouter> {
    return super.deploy(
      _ldao,
      _rewardPool,
      overrides || {}
    ) as Promise<TipRouter>;
  }
  override getDeployTransaction(
    _ldao: PromiseOrValue<string>,
    _rewardPool: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_ldao, _rewardPool, overrides || {});
  }
  override attach(address: string): TipRouter {
    return super.attach(address) as TipRouter;
  }
  override connect(signer: Signer): TipRouter__factory {
    return super.connect(signer) as TipRouter__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TipRouterInterface {
    return new utils.Interface(_abi) as TipRouterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TipRouter {
    return new Contract(address, _abi, signerOrProvider) as TipRouter;
  }
}
