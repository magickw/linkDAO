/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  OptimizedMarketplace,
  OptimizedMarketplaceInterface,
} from "../../../contracts/optimized/OptimizedMarketplace";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_feeBasisPoints",
        type: "uint32",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ArrayLengthMismatch",
    type: "error",
  },
  {
    inputs: [],
    name: "InsufficientQuantity",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidPrice",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidQuantity",
    type: "error",
  },
  {
    inputs: [],
    name: "ListingNotFound",
    type: "error",
  },
  {
    inputs: [],
    name: "MaxListingsExceeded",
    type: "error",
  },
  {
    inputs: [],
    name: "NotSeller",
    type: "error",
  },
  {
    inputs: [],
    name: "UnsupportedToken",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "seller",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "startId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "count",
        type: "uint256",
      },
    ],
    name: "BatchListingsCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "listingId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "buyer",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "seller",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "quantity",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "totalPrice",
        type: "uint256",
      },
    ],
    name: "ItemPurchased",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "listingId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "seller",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "quantity",
        type: "uint256",
      },
    ],
    name: "ListingCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "tokenAddresses",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "tokenIds",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "prices",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "quantities",
        type: "uint256[]",
      },
      {
        internalType: "uint8[]",
        name: "itemTypes",
        type: "uint8[]",
      },
      {
        internalType: "uint8[]",
        name: "listingTypes",
        type: "uint8[]",
      },
    ],
    name: "batchCreateListings",
    outputs: [
      {
        internalType: "uint256[]",
        name: "listingIds",
        type: "uint256[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "listingIds",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "quantities",
        type: "uint256[]",
      },
    ],
    name: "batchPurchaseItems",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "quantity",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "itemType",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "listingType",
        type: "uint8",
      },
    ],
    name: "createListing",
    outputs: [
      {
        internalType: "uint256",
        name: "listingId",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "emergencyWithdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "itemType",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "listingType",
        type: "uint8",
      },
    ],
    name: "estimateListingGas",
    outputs: [
      {
        internalType: "uint256",
        name: "estimatedGas",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "getContractState",
    outputs: [
      {
        internalType: "uint256",
        name: "totalListings",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "nextListingId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "feeBasisPoints",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxListingsPerUser",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "listingId",
        type: "uint256",
      },
    ],
    name: "getListing",
    outputs: [
      {
        internalType: "address",
        name: "seller",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "quantity",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "createdAt",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "categoryId",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "itemType",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "listingType",
        type: "uint8",
      },
      {
        internalType: "bool",
        name: "isActive",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "offset",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "limit",
        type: "uint256",
      },
    ],
    name: "getUserListings",
    outputs: [
      {
        internalType: "uint256[]",
        name: "listingIds",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "listingId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "quantity",
        type: "uint256",
      },
    ],
    name: "purchaseItem",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_feeBasisPoints",
        type: "uint32",
      },
    ],
    name: "setFeeBasisPoints",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "_maxListings",
        type: "uint16",
      },
    ],
    name: "setMaxListingsPerUser",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080346100f457601f6116dd38819003918201601f19168301916001600160401b038311848410176100f9578084926020946040528339810103126100f4575163ffffffff811681036100f4576001600081815581546001600160a81b0319811633600881811b610100600160a81b03169290921790945560405194939291901c6001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a360028054600160801b600160e01b03191660c09290921b63ffffffff60c01b1691909117600160801b1761ffff60e01b1916607d60e31b1790556115cd90816101108239f35b600080fd5b634e487b7160e01b600052604160045260246000fdfe6080604052600436101561001257600080fd5b60003560e01c8063086c2a5914610127578063107a274a146101225780633f4ba83a1461011d5780635c975abb14610118578063715018a6146101135780637f4e48491461010e57806381b73a8a1461010957806381d97492146101045780638456cb59146100ff5780638d882e6e146100fa5780638da5cb5b146100f5578063d7c4908e146100f0578063db2e21bc146100eb578063dcc3c3c1146100e6578063e0675698146100e1578063eb10455d146100dc5763f2fde38b146100d757600080fd5b610b77565b610abd565b61091f565b61075f565b610735565b61059d565b610540565b6104b4565b61045b565b610411565b6103ca565b61032c565b6102d9565b6102b6565b610222565b610174565b3461016f57602036600319011261016f5760043561ffff8116810361016f5761014e611373565b6002805461ffff60e01b191660e09290921b61ffff60e01b16919091179055005b600080fd5b3461016f57602036600319011261016f57600435600090815260036020908152604091829020805460019091015483516001600160a01b038316815260a092831c938101939093526001600160401b038116838501529283901c63ffffffff1660608084019190915283901c61ffff16608080840191909152607084901c60ff90811692840192909252607884901c821660c08401529290921c909116151560e082015261010090f35b0390f35b3461016f57600036600319011261016f5761023b611373565b60015460ff81161561027a5760ff19166001557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa6020604051338152a1005b60405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152606490fd5b3461016f57600036600319011261016f57602060ff600154166040519015158152f35b3461016f57600080600319360112610329576102f3611373565b60018054610100600160a81b03198116909155819060081c6001600160a01b03166000805160206115588339815191528280a380f35b80fd5b3461016f57600036600319011261016f57608060025461ffff60405191600180851b038116835260018060401b0381851c16602084015263ffffffff8160c01c16604084015260e01c166060820152f35b6001600160a01b0381160361016f57565b602090602060408183019282815285518094520193019160005b8281106103b6575050505090565b8351855293810193928101926001016103a8565b3461016f57606036600319011261016f5761021e6103fa6004356103ed8161037d565b6044359060243590610d7a565b6040519182918261038e565b60ff81160361016f57565b3461016f57604036600319011261016f5761042d600435610406565b60243561043981610406565b60ff6201d4c09116610451575b602090604051908152f35b50620222e0610446565b3461016f57600036600319011261016f57610474611373565b61047c6113ce565b600160ff19815416176001557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586020604051338152a1005b3461016f57602036600319011261016f5760043563ffffffff811680820361016f576103e8906104e2611373565b1161050c576002805463ffffffff60c01b191660c09290921b63ffffffff60c01b16919091179055005b60405162461bcd60e51b815260206004820152600c60248201526b08ccaca40e8dede40d0d2ced60a31b6044820152606490fd5b3461016f57600036600319011261016f5760015460405160089190911c6001600160a01b03168152602090f35b9181601f8401121561016f578235916001600160401b03831161016f576020808501948460051b01011161016f57565b60408060031936011261016f5760046001600160401b03813581811161016f576105ca903690840161056d565b60249391933583811161016f576105e4903690840161056d565b9290936105ef6113ce565b6105f7611412565b838303610725579560009687915b84831061068457505050853410610676575060005b81811061064c5785803411610636575b6106346001600055565b005b6000808080933403335af11561016f578061062a565b8061067061065d6001938589610e40565b35610669838789610e40565b3590611468565b0161061a565b60405162bfc92160e01b8152fd5b90919761069b6106958a878b610e40565b35610c3d565b906001918281015460ff8160801c161561071557856106bb8d8b8d610e40565b3591161061070557906106f66106e46106d86106fc945460a01c90565b6001600160601b031690565b6106ef8d8b8d610e40565b3590610e50565b90610d14565b98019190610605565b83516348e126c160e11b81528690fd5b8451630fc87cc760e31b81528790fd5b5060405163512509d360e11b8152fd5b3461016f576000806003193601126103295761074f611373565b8080808047335af1156103295780f35b3461016f5760c036600319011261016f576004803561077d8161037d565b60443590606435906084359061079282610406565b60a4359461079f86610406565b6107a76113ce565b6107af611412565b8415610676578315610901576001600160601b03808611610910576001600160401b0391828611610901576107e333610c4d565b54906002549161ffff8360e01c1611156108f2575060801c8216968794610808610c7d565b3381529288166001600160601b031660208401526001600160401b0387851616604084015263ffffffff421660608401526000608084015260ff1660a083015260ff1660c0820152600160e082015261086084610c3d565b9061086a91610e82565b600183011661087890610fab565b6002546001600160801b03166001016001600160801b031661089990610fd6565b816108a333610c4d565b906108ad91610ff8565b6040516001600160a01b0390911693339382916108cb91908361102d565b0360008051602061153883398151915291a46108e76001600055565b604051908152602090f35b604051634f399e0d60e01b8152fd5b60405163524f409b60e01b8152fd5b5060405162bfc92160e01b8152fd5b604036600319011261016f576004356024356109396113ce565b610941611412565b61094a82610c3d565b90600182019182549060ff8260801c1615610aab576001600160401b03918216808411610a9957610988846109836106d8855460a01c90565b610e50565b94853410610a88576109d293858303610a735750805460ff60801b19169055505b6002546109c5906000196001600160801b039182160116610fd6565b546001600160a01b031690565b9260009384808080610a16610a10610a08610a026109f960025463ffffffff9060c01c1690565b63ffffffff1690565b8b610e50565b612710900490565b89610d26565b855af115610a6f57833411610a60575b610a506000805160206115788339815191529160405191829160018060a01b03169633968361102d565b0390a4610a5d6001600055565b80f35b84808080873403335af1610a26575b8480fd5b610a839281871690031690610e63565b6109c5565b60405162bfc92160e01b8152600490fd5b6040516348e126c160e11b8152600490fd5b604051630fc87cc760e31b8152600490fd5b3461016f5760c036600319011261016f576001600160401b036004803582811161016f57610aee903690830161056d565b9060243584811161016f57610b06903690850161056d565b505060443584811161016f57610b1f903690850161056d565b9060643586811161016f57610b37903690870161056d565b9060843588811161016f57610b4f903690890161056d565b94909360a435998a1161016f57610b6f6103fa9961021e9b36910161056d565b98909761103e565b3461016f57602036600319011261016f57600435610b948161037d565b610b9c611373565b6001600160a01b03818116918215610be95760018054610100600160a81b03198116600893841b610100600160a81b031617909155901c16600080516020611558833981519152600080a3005b60405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608490fd5b6000526003602052604060002090565b6001600160a01b0316600090815260046020526040902090565b634e487b7160e01b600052604160045260246000fd5b6040519061010082016001600160401b03811183821017610c9d57604052565b610c67565b6001600160401b038111610c9d5760051b60200190565b90610cc382610ca2565b60405190601f1990601f01811682016001600160401b03811183821017610c9d57604052838252610cf48294610ca2565b0190602036910137565b634e487b7160e01b600052601160045260246000fd5b91908201809211610d2157565b610cfe565b91908203918211610d2157565b634e487b7160e01b600052603260045260246000fd5b8054821015610d615760005260206000200190600090565b610d33565b8051821015610d615760209160051b010190565b6001600160a01b03166000908152600460205260408120805491949390919081841015610e1457610dbf91610db0859283610d14565b90808211610e0c575b50610d26565b91610dc983610cb9565b945b838110610dd85750505050565b80610dfb610df1610deb60019486610d14565b86610d49565b90549060031b1c90565b610e058289610d66565b5201610dcb565b905038610db9565b50506040519293915050602082016001600160401b03811183821017610c9d5760405280825236813790565b9190811015610d615760051b0190565b81810292918115918404141715610d2157565b80546001600160401b0319166001600160401b03909216919091179055565b8151602083015160a01b6001600160a01b0319166001600160a01b0391909116178155610fa99190610f8f9060e090600190604085015191019390610ed0906001600160401b031685610e63565b610f04610ee4606083015163ffffffff1690565b855463ffffffff60401b191660409190911b63ffffffff60401b16178555565b610f32610f16608083015161ffff1690565b855461ffff60601b191660609190911b61ffff60601b16178555565b610f5d610f4360a083015160ff1690565b855460ff60701b191660709190911b60ff60701b16178555565b610f88610f6e60c083015160ff1690565b855460ff60781b191660789190911b60ff60781b16178555565b0151151590565b815460ff60801b191690151560801b60ff60801b16179055565b565b60028054600160801b600160c01b03191660809290921b600160801b600160c01b0316919091179055565b600280546001600160801b0319166001600160801b0392909216919091179055565b8054600160401b811015610c9d5761101591600182018155610d49565b819291549060031b91821b91600019901b1916179055565b908152602081019190915260400190565b979891909695989392936110506113ce565b611058611412565b848814801590611355575b801561134b575b8015611341575b61132f576110888861108233610c4d565b54610d14565b986002549961ffff8b60e01c161061131d576110a389610cb9565b9a60005b8a811061113c57506110d59850505050506001600160401b03608088901c81168701169350610fab92505050565b6002546110f1906001600160801b039081168382160116610fd6565b60405190815260809190911c6001600160401b03169033907f9de2f746caea94c6d16362d2ba637211cee04ebc43f2bfd61cb1340548aa967b90602090a36111396001600055565b90565b611147818987610e40565b3515801561130a575b610a88576001600160601b03611167828a88610e40565b351180156112ef575b610a885760808c901c6001600160401b0316810161118e828f610d66565b5261119a818987610e40565b356001600160601b03166111af828b8a610e40565b356001600160401b03166111c4838d86610e40565b6111cd9061135f565b6111d8848a89610e40565b6111e19061135f565b916111ea610c7d565b338152936001600160601b031660208501526001600160401b0316604084015263ffffffff421660608401526000608084015260ff1660a083015260ff1660c0820152600160e082015261124c60808e901c6001600160401b03168301610c3d565b9061125691610e82565b60808c901c6001600160401b0316810161126f33610c4d565b9061127991610ff8565b611284818c85610e40565b61128d90611369565b8c611299838b89610e40565b35916112a6848d8c610e40565b6040516001600160a01b0390921693339360801c6001600160401b03168601929182916112d59135908361102d565b0360008051602061153883398151915291a46001016110a7565b506001600160401b03611303828b8a610e40565b3511611170565b50611316818a89610e40565b3515611150565b604051634f399e0d60e01b8152600490fd5b60405163512509d360e11b8152600490fd5b5082881415611071565b508688141561106a565b5085881415611063565b3561113981610406565b356111398161037d565b60015460081c6001600160a01b0316330361138a57565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b60ff600154166113da57565b60405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606490fd5b600260005414611423576002600055565b60405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606490fd5b9061147282610c3d565b916114be611488836109836106d8875460a01c90565b6001850180549195916001600160401b0316906001600160401b0380831687036115275750805460ff60801b19169055506109a9565b6000808080806114ef6114e9610a086114e36109f960025463ffffffff9060c01c1690565b8c610e50565b8a610d26565b865af11561032957506115226000805160206115788339815191529160405191829160018060a01b03169633968361102d565b0390a4565b610a839281881690031690610e6356fe508c75a3cb42c068e54cf9e0b738921b4e2375725c5965ef4a110475606fc05a8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e03970dfcf6c5051e70a042aba5e1c65c1bceb2acd5aaf4e6246d7cd1dedb21aa3a26469706673582212201288e266b019ba1915c4e5f6cc46ef6f384003445fc4b3602a78e569b2c7247664736f6c63430008180033";

type OptimizedMarketplaceConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: OptimizedMarketplaceConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class OptimizedMarketplace__factory extends ContractFactory {
  constructor(...args: OptimizedMarketplaceConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _feeBasisPoints: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<OptimizedMarketplace> {
    return super.deploy(
      _feeBasisPoints,
      overrides || {}
    ) as Promise<OptimizedMarketplace>;
  }
  override getDeployTransaction(
    _feeBasisPoints: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_feeBasisPoints, overrides || {});
  }
  override attach(address: string): OptimizedMarketplace {
    return super.attach(address) as OptimizedMarketplace;
  }
  override connect(signer: Signer): OptimizedMarketplace__factory {
    return super.connect(signer) as OptimizedMarketplace__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OptimizedMarketplaceInterface {
    return new utils.Interface(_abi) as OptimizedMarketplaceInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): OptimizedMarketplace {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as OptimizedMarketplace;
  }
}
