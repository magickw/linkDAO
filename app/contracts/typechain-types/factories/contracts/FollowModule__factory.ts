/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  FollowModule,
  FollowModuleInterface,
} from "../../contracts/FollowModule";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "follower",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "following",
        type: "address",
      },
    ],
    name: "Followed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "follower",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "following",
        type: "address",
      },
    ],
    name: "Unfollowed",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    name: "follow",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "followerCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "followingCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "follows",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "follower",
        type: "address",
      },
      {
        internalType: "address",
        name: "following",
        type: "address",
      },
    ],
    name: "isFollowing",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    name: "unfollow",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080806040523461005b5760008054336001600160a01b0319821681178355916001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a36105cb90816100618239f35b600080fdfe604060808152600436101561001357600080fd5b600090813560e01c8063015a4ead1461039457806330b3a8901461035d5780634dbf27cc146102295780635d1ca4761461013357806364548707146101f2578063715018a6146101a75780638da5cb5b1461018057806399ec3a42146101335763f2fde38b1461008257600080fd5b3461012f57602036600319011261012f5761009b61047c565b6100a361051d565b6001600160a01b039081169182156100dd575082546001600160a01b0319811683178455166000805160206105768339815191528380a380f35b5162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608490fd5b5080fd5b503461012f578060031936011261012f5760ff8160209361015261047c565b61015a610497565b6001600160a01b0391821683526001875283832091168252855220549151911615158152f35b503461012f578160031936011261012f57905490516001600160a01b039091168152602090f35b82346101ef57806003193601126101ef576101c061051d565b80546001600160a01b03198116825581906001600160a01b03166000805160206105768339815191528280a380f35b80fd5b503461012f57602036600319011261012f5760209181906001600160a01b0361021961047c565b1681526003845220549051908152f35b503461012f5760209081600319360112610359576001600160a01b0361024d61047c565b169161025a8315156104ad565b33831461031e5733845260018152818420838552815260ff82852054166102e857600390338552600181528285208486528152828520600160ff19825416179055600281528285206102ac815461050e565b90553385525282206102be815461050e565b9055337f6178e95c138f06036cdc07a49ed6a3d23008969fa143baeceb037ebae22e8d148380a380f35b606491519062461bcd60e51b825260048201526011602482015270416c726561647920666f6c6c6f77696e6760781b6044820152fd5b606491519062461bcd60e51b82526004820152601660248201527521b0b73737ba103337b63637bb903cb7bab939b2b63360511b6044820152fd5b8280fd5b503461012f57602036600319011261012f5760209181906001600160a01b0361038461047c565b1681526002845220549051908152f35b503461012f5760209081600319360112610359576001600160a01b036103b861047c565b16916103c58315156104ad565b33845260018152818420838552815260ff82852054161561044a5760039033855260018152828520848652815282852060ff1981541690556002815282852061040e81546104eb565b905533855252822061042081546104eb565b9055337f25b48012798806863072289354ed0b3849b73152482d9c6694e5cbb35f38d5e38380a380f35b606491519062461bcd60e51b82526004820152600d60248201526c4e6f7420666f6c6c6f77696e6760981b6044820152fd5b600435906001600160a01b038216820361049257565b600080fd5b602435906001600160a01b038216820361049257565b156104b457565b60405162461bcd60e51b815260206004820152600f60248201526e496e76616c6964206164647265737360881b6044820152606490fd5b80156104f8576000190190565b634e487b7160e01b600052601160045260246000fd5b60001981146104f85760010190565b6000546001600160a01b0316330361053157565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fdfe8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0a2646970667358221220cbfbea368b0965ebedb60e3f3ed876a00ce6e253073b804f511070b7c277b01364736f6c63430008180033";

type FollowModuleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FollowModuleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class FollowModule__factory extends ContractFactory {
  constructor(...args: FollowModuleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<FollowModule> {
    return super.deploy(overrides || {}) as Promise<FollowModule>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): FollowModule {
    return super.attach(address) as FollowModule;
  }
  override connect(signer: Signer): FollowModule__factory {
    return super.connect(signer) as FollowModule__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FollowModuleInterface {
    return new utils.Interface(_abi) as FollowModuleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): FollowModule {
    return new Contract(address, _abi, signerOrProvider) as FollowModule;
  }
}
