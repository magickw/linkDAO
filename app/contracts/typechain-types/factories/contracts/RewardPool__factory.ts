/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  RewardPool,
  RewardPoolInterface,
} from "../../contracts/RewardPool";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_ldao",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Claimed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "epoch",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Funded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "accounts",
    outputs: [
      {
        internalType: "uint256",
        name: "earned",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lastEpochCounted",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "claim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "credit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "currentEpoch",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "fund",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "ldao",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a0346100b757601f6106ef38819003918201601f19168301916001600160401b038311848410176100bc578084926020946040528339810103126100b757516001600160a01b0390818116908190036100b7576000543360018060a01b0319821617600055604051923391167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a360805261061c90816100d382396080518181816101cb015281816103d001526104d30152f35b600080fd5b634e487b7160e01b600052604160045260246000fdfe6080604081815260048036101561001557600080fd5b600092833560e01c9081630cc89a07146104bf575080634e71d92d146103795780635e5c06e214610337578063715018a6146102ec57806376671808146102cd5780638da5cb5b146102a5578063ca1d209d1461018c578063ef6506db146101395763f2fde38b1461008657600080fd5b346101355760203660031901126101355761009f610502565b906100a861056e565b6001600160a01b039182169283156100e357505082546001600160a01b0319811683178455166000805160206105c78339815191528380a380f35b906020608492519162461bcd60e51b8352820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152fd5b8280fd5b5090346101355780600319360112610135576001600160a01b0361015b610502565b16835260026020528220805491602435830180931161017957505580f35b634e487b7160e01b845260119052602483fd5b509190346102a1576020806003193601126101355781516323b872dd60e01b8152338186015230602482015284356044820181905294908281606481887f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165af190811561029757859161026a575b501561023d57507fa1dd612b9278fe0bb5d89ed1f642dc3678d0e558630c5a4a8df212ba2197cdb49293600154918351928352820152a180f35b915162461bcd60e51b8152918201526009602482015268199d5b990819985a5b60ba1b6044820152606490fd5b61028a9150833d8511610290575b610282818361051d565b810190610556565b38610203565b503d610278565b84513d87823e3d90fd5b5080fd5b5050346102a157816003193601126102a157905490516001600160a01b039091168152602090f35b5050346102a157816003193601126102a1576020906001549051908152f35b833461033457806003193601126103345761030561056e565b80546001600160a01b03198116825581906001600160a01b03166000805160206105c78339815191528280a380f35b80fd5b5050346102a15760203660031901126102a1579081906001600160a01b0361035d610502565b1681526002602052206001815491015482519182526020820152f35b5090346101355782600319360112610135573383526020906002825280842054928315610494573380865260028452828620869055825163a9059cbb60e01b815282810191909152602481018590528381604481897f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165af190811561048a57869161046d575b501561043c5750907fd8138f8a3f377c5259ca548e70e4c2de94f129f5a11036a15b69513cba2b426a91519283523392a280f35b82606492519162461bcd60e51b8352820152600d60248201526c1d1c985b9cd9995c8819985a5b609a1b6044820152fd5b6104849150843d861161029057610282818361051d565b38610408565b83513d88823e3d90fd5b82606492519162461bcd60e51b835282015260076024820152666e6f7468696e6760c81b6044820152fd5b8490346102a157816003193601126102a1577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b600435906001600160a01b038216820361051857565b600080fd5b601f909101601f19168101906001600160401b0382119082101761054057604052565b634e487b7160e01b600052604160045260246000fd5b90816020910312610518575180151581036105185790565b6000546001600160a01b0316330361058257565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fdfe8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0a26469706673582212201398d40bc984243c70e81b2759e19ba12a410e515bfa26a6622840850068eda064736f6c63430008180033";

type RewardPoolConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RewardPoolConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RewardPool__factory extends ContractFactory {
  constructor(...args: RewardPoolConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _ldao: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<RewardPool> {
    return super.deploy(_ldao, overrides || {}) as Promise<RewardPool>;
  }
  override getDeployTransaction(
    _ldao: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_ldao, overrides || {});
  }
  override attach(address: string): RewardPool {
    return super.attach(address) as RewardPool;
  }
  override connect(signer: Signer): RewardPool__factory {
    return super.connect(signer) as RewardPool__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RewardPoolInterface {
    return new utils.Interface(_abi) as RewardPoolInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RewardPool {
    return new Contract(address, _abi, signerOrProvider) as RewardPool;
  }
}
