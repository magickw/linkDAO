{
  "summary": {
    "total": 78,
    "passed": 0,
    "failed": 1,
    "pending": 77,
    "success": false,
    "duration": 1744,
    "timestamp": "2025-10-21T00:45:41.499Z"
  },
  "suites": [
    {
      "name": "Seller End To End Integration Tests",
      "path": "/Users/bfguo/Dropbox/Mac/Documents/LinkDAO/app/frontend/src/__tests__/integration/seller/SellerEndToEndIntegrationTests.test.tsx",
      "passed": 0,
      "failed": 1,
      "pending": 23,
      "duration": 620,
      "tests": [
        {
          "title": "should complete full seller onboarding to store creation workflow",
          "status": "failed",
          "duration": 56,
          "failureMessages": [
            "ReferenceError: user is not defined\n    at Object.<anonymous> (/Users/bfguo/Dropbox/Mac/Documents/LinkDAO/app/frontend/src/__tests__/integration/seller/SellerEndToEndIntegrationTests.test.tsx:275:7)"
          ]
        },
        {
          "title": "should handle seller profile updates across all components",
          "status": "pending",
          "duration": 0,
          "failureMessages": []
        },
        {
          "title": "should handle complex seller listing management workflow",
          "status": "pending",
          "duration": 0,
          "failureMessages": []
        },
        {
          "title": "should maintain data consistency under high load",
          "status": "pending",
          "duration": 0,
          "failureMessages": []
        },
        {
          "title": "should handle database connection failures gracefully",
          "status": "pending",
          "duration": 0,
          "failureMessages": []
        },
        {
          "title": "should maintain referential integrity across seller data updates",
          "status": "pending",
          "duration": 0,
          "failureMessages": []
        },
        {
          "title": "should recover from network failures with exponential backoff",
          "status": "pending",
          "duration": 0,
          "failureMessages": []
        },
        {
          "title": "should handle API rate limiting gracefully",
          "status": "pending",
          "duration": 0,
          "failureMessages": []
        },
        {
          "title": "should handle partial API failures with graceful degradation",
          "status": "pending",
          "duration": 0,
          "failureMessages": []
        },
        {
          "title": "should handle cache corruption and recovery",
          "status": "pending",
          "duration": 0,
          "failureMessages": []
        },
        {
          "title": "should render mobile-optimized seller components",
          "status": "pending",
          "duration": 0,
          "failureMessages": []
        },
        {
          "title": "should handle touch interactions properly on mobile",
          "status": "pending",
          "duration": 0,
          "failureMessages": []
        },
        {
          "title": "should implement swipe gestures for mobile navigation",
          "status": "pending",
          "duration": 0,
          "failureMessages": []
        },
        {
          "title": "should optimize forms for mobile input methods",
          "status": "pending",
          "duration": 0,
          "failureMessages": []
        },
        {
          "title": "should handle orientation changes gracefully",
          "status": "pending",
          "duration": 0,
          "failureMessages": []
        },
        {
          "title": "should handle multiple WebSocket connections efficiently",
          "status": "pending",
          "duration": 0,
          "failureMessages": []
        },
        {
          "title": "should handle WebSocket connection failures and reconnection",
          "status": "pending",
          "duration": 0,
          "failureMessages": []
        },
        {
          "title": "should handle high-frequency real-time updates efficiently",
          "status": "pending",
          "duration": 0,
          "failureMessages": []
        },
        {
          "title": "should load seller components within performance thresholds",
          "status": "pending",
          "duration": 0,
          "failureMessages": []
        },
        {
          "title": "should handle large datasets efficiently",
          "status": "pending",
          "duration": 0,
          "failureMessages": []
        },
        {
          "title": "should implement efficient virtual scrolling for large lists",
          "status": "pending",
          "duration": 0,
          "failureMessages": []
        },
        {
          "title": "should optimize memory usage during component lifecycle",
          "status": "pending",
          "duration": 0,
          "failureMessages": []
        },
        {
          "title": "should work consistently across different screen sizes",
          "status": "pending",
          "duration": 0,
          "failureMessages": []
        },
        {
          "title": "should handle different input methods (touch, mouse, keyboard)",
          "status": "pending",
          "duration": 0,
          "failureMessages": []
        }
      ],
      "failureMessage": "\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mSeller End-to-End Integration Tests › Complete Seller Workflow Tests › should complete full seller onboarding to store creation workflow\u001b[39m\u001b[22m\n\n    ReferenceError: user is not defined\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 273 |\u001b[39m       \u001b[36mconst\u001b[39m bioInput \u001b[33m=\u001b[39m screen\u001b[33m.\u001b[39mgetByLabelText(\u001b[35m/bio/i\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 274 |\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 275 |\u001b[39m       \u001b[36mawait\u001b[39m user\u001b[33m.\u001b[39mtype(displayNameInput\u001b[33m,\u001b[39m \u001b[32m'Test Seller'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m       \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 276 |\u001b[39m       \u001b[36mawait\u001b[39m user\u001b[33m.\u001b[39mtype(storeNameInput\u001b[33m,\u001b[39m \u001b[32m'Test Store'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 277 |\u001b[39m       \u001b[36mawait\u001b[39m user\u001b[33m.\u001b[39mtype(bioInput\u001b[33m,\u001b[39m \u001b[32m'Test bio description'\u001b[39m)\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 278 |\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[2m\u001b[0m\u001b[36msrc/__tests__/integration/seller/SellerEndToEndIntegrationTests.test.tsx\u001b[39m\u001b[0m\u001b[2m:275:7)\u001b[22m\u001b[2m\u001b[22m\n"
    },
    {
      "name": "Seller Test Framework Demo",
      "path": "/Users/bfguo/Dropbox/Mac/Documents/LinkDAO/app/frontend/src/__tests__/integration/seller/SellerTestFrameworkDemo.test.tsx",
      "passed": 0,
      "failed": 0,
      "pending": 19,
      "duration": 46,
      "tests": [
        {
          "title": "should demonstrate API endpoint standardization testing",
          "status": "pending",
          "duration": 0,
          "failureMessages": []
        },
        {
          "title": "should demonstrate consistent response format validation",
          "status": "pending",
          "duration": 0,
          "failureMessages": []
        },
        {
          "title": "should demonstrate data synchronization testing",
          "status": "pending",
          "duration": 0,
          "failureMessages": []
        },
        {
          "title": "should demonstrate cache invalidation testing",
          "status": "pending",
          "duration": 0,
          "failureMessages": []
        },
        {
          "title": "should demonstrate cache dependency tracking",
          "status": "pending",
          "duration": 0,
          "failureMessages": []
        },
        {
          "title": "should demonstrate error handling consistency",
          "status": "pending",
          "duration": 0,
          "failureMessages": []
        },
        {
          "title": "should demonstrate graceful degradation",
          "status": "pending",
          "duration": 0,
          "failureMessages": []
        },
        {
          "title": "should demonstrate mobile viewport detection",
          "status": "pending",
          "duration": 0,
          "failureMessages": []
        },
        {
          "title": "should demonstrate touch interaction testing",
          "status": "pending",
          "duration": 0,
          "failureMessages": []
        },
        {
          "title": "should demonstrate performance measurement",
          "status": "pending",
          "duration": 0,
          "failureMessages": []
        },
        {
          "title": "should demonstrate memory usage tracking",
          "status": "pending",
          "duration": 0,
          "failureMessages": []
        },
        {
          "title": "should demonstrate custom seller profile matcher",
          "status": "pending",
          "duration": 0,
          "failureMessages": []
        },
        {
          "title": "should demonstrate performance threshold matcher",
          "status": "pending",
          "duration": 0,
          "failureMessages": []
        },
        {
          "title": "should cover requirement 10.1: API Endpoint Consistency",
          "status": "pending",
          "duration": 0,
          "failureMessages": []
        },
        {
          "title": "should cover requirement 10.2: Data Synchronization",
          "status": "pending",
          "duration": 0,
          "failureMessages": []
        },
        {
          "title": "should cover requirement 10.3: Cache Invalidation",
          "status": "pending",
          "duration": 0,
          "failureMessages": []
        },
        {
          "title": "should cover requirement 10.4: Error Handling",
          "status": "pending",
          "duration": 0,
          "failureMessages": []
        },
        {
          "title": "should cover requirement 10.5: Mobile Optimization",
          "status": "pending",
          "duration": 0,
          "failureMessages": []
        },
        {
          "title": "should cover requirement 10.6: Performance Benchmarking",
          "status": "pending",
          "duration": 0,
          "failureMessages": []
        }
      ],
      "failureMessage": null
    },
    {
      "name": "Seller Integration Test Suite",
      "path": "/Users/bfguo/Dropbox/Mac/Documents/LinkDAO/app/frontend/src/__tests__/integration/seller/SellerIntegrationTestSuite.test.tsx",
      "passed": 0,
      "failed": 0,
      "pending": 0,
      "duration": 0,
      "tests": [],
      "failureMessage": "  \u001b[1m● \u001b[22mTest suite failed to run\n\n      \u001b[31m×\u001b[0m Expected '>', got 'data'\n       ╭─[\u001b[36;1;4m/Users/bfguo/Dropbox/Mac/Documents/LinkDAO/app/frontend/src/__tests__/mocks/rainbowkit.ts\u001b[0m:4:1]\n     \u001b[2m1\u001b[0m │ // Mock for @rainbow-me/rainbowkit library to avoid ES module parsing issues in Jest\n     \u001b[2m2\u001b[0m │ \n     \u001b[2m3\u001b[0m │ export const ConnectButton = ({ children }: { children?: React.ReactNode }) => (\n     \u001b[2m4\u001b[0m │   <button data-testid=\"connect-button\">\n       · \u001b[35;1m          ────\u001b[0m\n     \u001b[2m5\u001b[0m │     {children || 'Connect Wallet'}\n     \u001b[2m6\u001b[0m │   </button>\n     \u001b[2m7\u001b[0m │ );\n       ╰────\n\n\n    Caused by:\n        Syntax Error\n\n    \u001b[0m \u001b[90m 12 |\u001b[39m }\n     \u001b[90m 13 |\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 14 |\u001b[39m \u001b[36mexport\u001b[39m \u001b[36mconst\u001b[39m \u001b[33mWalletConnectButton\u001b[39m\u001b[33m:\u001b[39m \u001b[33mReact\u001b[39m\u001b[33m.\u001b[39m\u001b[33mFC\u001b[39m\u001b[33m<\u001b[39m\u001b[33mWalletConnectButtonProps\u001b[39m\u001b[33m>\u001b[39m \u001b[33m=\u001b[39m ({\n     \u001b[90m    |\u001b[39m                     \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 15 |\u001b[39m   onSuccess\u001b[33m,\u001b[39m\n     \u001b[90m 16 |\u001b[39m   onError\u001b[33m,\u001b[39m\n     \u001b[90m 17 |\u001b[39m   className \u001b[33m=\u001b[39m \u001b[32m''\u001b[39m\u001b[33m,\u001b[39m\u001b[0m\n\n      \u001b[2mat Object.transformSync (\u001b[22mnode_modules/next/src/build/swc/index.ts\u001b[2m:1396:25)\u001b[22m\n      \u001b[2mat transformSync (\u001b[22mnode_modules/next/src/build/swc/index.ts\u001b[2m:1516:19)\u001b[22m\n      \u001b[2mat Object.process (\u001b[22mnode_modules/next/src/build/swc/jest-transformer.ts\u001b[2m:105:25)\u001b[22m\n      \u001b[2mat ScriptTransformer.transformSource (\u001b[22m../node_modules/@jest/transform/build/ScriptTransformer.js\u001b[2m:545:31)\u001b[22m\n      \u001b[2mat ScriptTransformer._transformAndBuildScript (\u001b[22m../node_modules/@jest/transform/build/ScriptTransformer.js\u001b[2m:674:40)\u001b[22m\n      \u001b[2mat ScriptTransformer.transform (\u001b[22m../node_modules/@jest/transform/build/ScriptTransformer.js\u001b[2m:726:19)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/components/Auth/WalletConnectButton.tsx\u001b[2m:14:21)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/components/Marketplace/Homepage/GlassmorphicNavbar.tsx\u001b[2m:21:30)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/components/Marketplace/Homepage/index.ts\u001b[2m:39:29)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/components/Marketplace/index.ts\u001b[2m:47:19)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[0m\u001b[36msrc/__tests__/integration/seller/SellerIntegrationTestSuite.test.tsx\u001b[39m\u001b[0m\u001b[2m:50:22)\u001b[22m\n"
    },
    {
      "name": "Seller Mobile Optimization Tests",
      "path": "/Users/bfguo/Dropbox/Mac/Documents/LinkDAO/app/frontend/src/__tests__/integration/seller/SellerMobileOptimizationTests.test.tsx",
      "passed": 0,
      "failed": 0,
      "pending": 19,
      "duration": 140,
      "tests": [
        {
          "title": "should render mobile-optimized seller dashboard on small screens",
          "status": "pending",
          "duration": 0,
          "failureMessages": []
        },
        {
          "title": "should adapt layout for different mobile orientations",
          "status": "pending",
          "duration": 0,
          "failureMessages": []
        },
        {
          "title": "should implement proper mobile navigation patterns",
          "status": "pending",
          "duration": 0,
          "failureMessages": []
        },
        {
          "title": "should implement touch-optimized buttons with proper sizing",
          "status": "pending",
          "duration": 0,
          "failureMessages": []
        },
        {
          "title": "should handle touch events properly",
          "status": "pending",
          "duration": 0,
          "failureMessages": []
        },
        {
          "title": "should implement swipe gestures for seller cards",
          "status": "pending",
          "duration": 0,
          "failureMessages": []
        },
        {
          "title": "should provide haptic feedback for touch interactions",
          "status": "pending",
          "duration": 0,
          "failureMessages": []
        },
        {
          "title": "should optimize form inputs for mobile devices",
          "status": "pending",
          "duration": 0,
          "failureMessages": []
        },
        {
          "title": "should implement mobile-friendly validation",
          "status": "pending",
          "duration": 0,
          "failureMessages": []
        },
        {
          "title": "should handle virtual keyboard properly",
          "status": "pending",
          "duration": 0,
          "failureMessages": []
        },
        {
          "title": "should implement lazy loading for mobile components",
          "status": "pending",
          "duration": 0,
          "failureMessages": []
        },
        {
          "title": "should optimize images for mobile devices",
          "status": "pending",
          "duration": 0,
          "failureMessages": []
        },
        {
          "title": "should implement efficient touch event handling",
          "status": "pending",
          "duration": 0,
          "failureMessages": []
        },
        {
          "title": "should implement proper ARIA labels for mobile interfaces",
          "status": "pending",
          "duration": 0,
          "failureMessages": []
        },
        {
          "title": "should support screen readers on mobile devices",
          "status": "pending",
          "duration": 0,
          "failureMessages": []
        },
        {
          "title": "should handle focus management for mobile interfaces",
          "status": "pending",
          "duration": 0,
          "failureMessages": []
        },
        {
          "title": "should detect mobile device correctly",
          "status": "pending",
          "duration": 0,
          "failureMessages": []
        },
        {
          "title": "should respond to orientation changes",
          "status": "pending",
          "duration": 0,
          "failureMessages": []
        },
        {
          "title": "should handle viewport size changes",
          "status": "pending",
          "duration": 0,
          "failureMessages": []
        }
      ],
      "failureMessage": null
    },
    {
      "name": "Seller Cache Invalidation Tests",
      "path": "/Users/bfguo/Dropbox/Mac/Documents/LinkDAO/app/frontend/src/__tests__/integration/seller/SellerCacheInvalidationTests.test.tsx",
      "passed": 0,
      "failed": 0,
      "pending": 16,
      "duration": 224,
      "tests": [
        {
          "title": "should invalidate profile cache when profile is updated",
          "status": "pending",
          "duration": 0,
          "failureMessages": []
        },
        {
          "title": "should invalidate cache across all seller components when profile changes",
          "status": "pending",
          "duration": 0,
          "failureMessages": []
        },
        {
          "title": "should handle partial cache invalidation correctly",
          "status": "pending",
          "duration": 0,
          "failureMessages": []
        },
        {
          "title": "should invalidate listing cache when listings are modified",
          "status": "pending",
          "duration": 0,
          "failureMessages": []
        },
        {
          "title": "should invalidate dashboard cache when listings change",
          "status": "pending",
          "duration": 0,
          "failureMessages": []
        },
        {
          "title": "should handle WebSocket-triggered cache invalidation",
          "status": "pending",
          "duration": 0,
          "failureMessages": []
        },
        {
          "title": "should batch multiple cache invalidations efficiently",
          "status": "pending",
          "duration": 0,
          "failureMessages": []
        },
        {
          "title": "should handle cache invalidation failures gracefully",
          "status": "pending",
          "duration": 0,
          "failureMessages": []
        },
        {
          "title": "should retry failed cache invalidations",
          "status": "pending",
          "duration": 0,
          "failureMessages": []
        },
        {
          "title": "should provide fallback when cache is corrupted",
          "status": "pending",
          "duration": 0,
          "failureMessages": []
        },
        {
          "title": "should invalidate dependent caches when parent data changes",
          "status": "pending",
          "duration": 0,
          "failureMessages": []
        },
        {
          "title": "should track cache dependencies correctly",
          "status": "pending",
          "duration": 0,
          "failureMessages": []
        },
        {
          "title": "should handle circular dependencies safely",
          "status": "pending",
          "duration": 0,
          "failureMessages": []
        },
        {
          "title": "should implement intelligent cache warming",
          "status": "pending",
          "duration": 0,
          "failureMessages": []
        },
        {
          "title": "should implement cache size limits and eviction",
          "status": "pending",
          "duration": 0,
          "failureMessages": []
        },
        {
          "title": "should optimize cache invalidation performance",
          "status": "pending",
          "duration": 0,
          "failureMessages": []
        }
      ],
      "failureMessage": null
    }
  ],
  "performance": {
    "averageTestDuration": 0.717948717948718,
    "slowestTests": [
      {
        "name": "Seller End To End Integration Tests: should complete full seller onboarding to store creation workflow",
        "duration": 56
      }
    ],
    "fastestTests": [
      {
        "name": "Seller End To End Integration Tests: should complete full seller onboarding to store creation workflow",
        "duration": 56
      }
    ],
    "memoryUsage": {
      "rss": 326287360,
      "heapTotal": 239009792,
      "heapUsed": 203706712,
      "external": 20340249,
      "arrayBuffers": 16755040
    }
  },
  "coverage": null,
  "recommendations": [
    {
      "type": "error",
      "title": "Failed Tests",
      "description": "1 test suite(s) have failing tests that need attention.",
      "action": "Review and fix failing tests before deployment."
    }
  ]
}