{
  "summary": {
    "total": 43,
    "passed": 0,
    "failed": 1,
    "pending": 42,
    "success": false,
    "duration": 1370,
    "timestamp": "2025-10-21T00:03:44.370Z"
  },
  "suites": [
    {
      "name": "Seller End To End Integration Tests",
      "path": "/Users/bfguo/Dropbox/Mac/Documents/LinkDAO/app/frontend/src/__tests__/integration/seller/SellerEndToEndIntegrationTests.test.tsx",
      "passed": 0,
      "failed": 1,
      "pending": 23,
      "duration": 535,
      "tests": [
        {
          "title": "should complete full seller onboarding to store creation workflow",
          "status": "failed",
          "duration": 2,
          "failureMessages": [
            "TypeError: Cannot redefine property: clipboard\n    at Function.defineProperty (<anonymous>)\n    at Object.attachClipboardStubToView (/Users/bfguo/Dropbox/Mac/Documents/LinkDAO/app/node_modules/@testing-library/user-event/dist/cjs/utils/dataTransfer/Clipboard.js:110:12)\n    at Object.setupMain [as setup] (/Users/bfguo/Dropbox/Mac/Documents/LinkDAO/app/node_modules/@testing-library/user-event/dist/cjs/setup/setup.js:58:15)\n    at Object.setup (/Users/bfguo/Dropbox/Mac/Documents/LinkDAO/app/frontend/src/__tests__/integration/seller/SellerEndToEndIntegrationTests.test.tsx:144:30)\n    at Promise.then.completed (/Users/bfguo/Dropbox/Mac/Documents/LinkDAO/app/node_modules/jest-circus/build/utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (/Users/bfguo/Dropbox/Mac/Documents/LinkDAO/app/node_modules/jest-circus/build/utils.js:231:10)\n    at _callCircusTest (/Users/bfguo/Dropbox/Mac/Documents/LinkDAO/app/node_modules/jest-circus/build/run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at _runTest (/Users/bfguo/Dropbox/Mac/Documents/LinkDAO/app/node_modules/jest-circus/build/run.js:252:3)\n    at _runTestsForDescribeBlock (/Users/bfguo/Dropbox/Mac/Documents/LinkDAO/app/node_modules/jest-circus/build/run.js:126:9)\n    at _runTestsForDescribeBlock (/Users/bfguo/Dropbox/Mac/Documents/LinkDAO/app/node_modules/jest-circus/build/run.js:121:9)\n    at _runTestsForDescribeBlock (/Users/bfguo/Dropbox/Mac/Documents/LinkDAO/app/node_modules/jest-circus/build/run.js:121:9)\n    at run (/Users/bfguo/Dropbox/Mac/Documents/LinkDAO/app/node_modules/jest-circus/build/run.js:71:3)\n    at runAndTransformResultsToJestFormat (/Users/bfguo/Dropbox/Mac/Documents/LinkDAO/app/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)\n    at jestAdapter (/Users/bfguo/Dropbox/Mac/Documents/LinkDAO/app/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)\n    at runTestInternal (/Users/bfguo/Dropbox/Mac/Documents/LinkDAO/app/node_modules/jest-runner/build/runTest.js:367:16)\n    at runTest (/Users/bfguo/Dropbox/Mac/Documents/LinkDAO/app/node_modules/jest-runner/build/runTest.js:444:34)"
          ]
        },
        {
          "title": "should handle seller profile updates across all components",
          "status": "pending",
          "duration": 0,
          "failureMessages": []
        },
        {
          "title": "should handle complex seller listing management workflow",
          "status": "pending",
          "duration": 0,
          "failureMessages": []
        },
        {
          "title": "should maintain data consistency under high load",
          "status": "pending",
          "duration": 0,
          "failureMessages": []
        },
        {
          "title": "should handle database connection failures gracefully",
          "status": "pending",
          "duration": 0,
          "failureMessages": []
        },
        {
          "title": "should maintain referential integrity across seller data updates",
          "status": "pending",
          "duration": 0,
          "failureMessages": []
        },
        {
          "title": "should recover from network failures with exponential backoff",
          "status": "pending",
          "duration": 0,
          "failureMessages": []
        },
        {
          "title": "should handle API rate limiting gracefully",
          "status": "pending",
          "duration": 0,
          "failureMessages": []
        },
        {
          "title": "should handle partial API failures with graceful degradation",
          "status": "pending",
          "duration": 0,
          "failureMessages": []
        },
        {
          "title": "should handle cache corruption and recovery",
          "status": "pending",
          "duration": 0,
          "failureMessages": []
        },
        {
          "title": "should render mobile-optimized seller components",
          "status": "pending",
          "duration": 0,
          "failureMessages": []
        },
        {
          "title": "should handle touch interactions properly on mobile",
          "status": "pending",
          "duration": 0,
          "failureMessages": []
        },
        {
          "title": "should implement swipe gestures for mobile navigation",
          "status": "pending",
          "duration": 0,
          "failureMessages": []
        },
        {
          "title": "should optimize forms for mobile input methods",
          "status": "pending",
          "duration": 0,
          "failureMessages": []
        },
        {
          "title": "should handle orientation changes gracefully",
          "status": "pending",
          "duration": 0,
          "failureMessages": []
        },
        {
          "title": "should handle multiple WebSocket connections efficiently",
          "status": "pending",
          "duration": 0,
          "failureMessages": []
        },
        {
          "title": "should handle WebSocket connection failures and reconnection",
          "status": "pending",
          "duration": 0,
          "failureMessages": []
        },
        {
          "title": "should handle high-frequency real-time updates efficiently",
          "status": "pending",
          "duration": 0,
          "failureMessages": []
        },
        {
          "title": "should load seller components within performance thresholds",
          "status": "pending",
          "duration": 0,
          "failureMessages": []
        },
        {
          "title": "should handle large datasets efficiently",
          "status": "pending",
          "duration": 0,
          "failureMessages": []
        },
        {
          "title": "should implement efficient virtual scrolling for large lists",
          "status": "pending",
          "duration": 0,
          "failureMessages": []
        },
        {
          "title": "should optimize memory usage during component lifecycle",
          "status": "pending",
          "duration": 0,
          "failureMessages": []
        },
        {
          "title": "should work consistently across different screen sizes",
          "status": "pending",
          "duration": 0,
          "failureMessages": []
        },
        {
          "title": "should handle different input methods (touch, mouse, keyboard)",
          "status": "pending",
          "duration": 0,
          "failureMessages": []
        }
      ],
      "failureMessage": "\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mSeller End-to-End Integration Tests › Complete Seller Workflow Tests › should complete full seller onboarding to store creation workflow\u001b[39m\u001b[22m\n\n    TypeError: Cannot redefine property: clipboard\n        at Function.defineProperty (<anonymous>)\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 142 |\u001b[39m   describe(\u001b[32m'Complete Seller Workflow Tests'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[22m\n\u001b[2m     \u001b[90m 143 |\u001b[39m     it(\u001b[32m'should complete full seller onboarding to store creation workflow'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 144 |\u001b[39m       \u001b[36mconst\u001b[39m user \u001b[33m=\u001b[39m userEvent\u001b[33m.\u001b[39msetup()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 145 |\u001b[39m       \u001b[22m\n\u001b[2m     \u001b[90m 146 |\u001b[39m       \u001b[90m// Mock API responses for complete workflow\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 147 |\u001b[39m       \u001b[36mconst\u001b[39m mockProfile \u001b[33m=\u001b[39m createMockSellerProfile()\u001b[33m;\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.attachClipboardStubToView (\u001b[22m\u001b[2m../node_modules/@testing-library/user-event/dist/cjs/utils/dataTransfer/Clipboard.js\u001b[2m:110:12)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.setupMain [as setup] (\u001b[22m\u001b[2m../node_modules/@testing-library/user-event/dist/cjs/setup/setup.js\u001b[2m:58:15)\u001b[22m\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.setup (\u001b[22m\u001b[2m\u001b[0m\u001b[36msrc/__tests__/integration/seller/SellerEndToEndIntegrationTests.test.tsx\u001b[39m\u001b[0m\u001b[2m:144:30)\u001b[22m\u001b[2m\u001b[22m\n"
    },
    {
      "name": "Seller Test Framework Demo",
      "path": "/Users/bfguo/Dropbox/Mac/Documents/LinkDAO/app/frontend/src/__tests__/integration/seller/SellerTestFrameworkDemo.test.tsx",
      "passed": 0,
      "failed": 0,
      "pending": 19,
      "duration": 40,
      "tests": [
        {
          "title": "should demonstrate API endpoint standardization testing",
          "status": "pending",
          "duration": 0,
          "failureMessages": []
        },
        {
          "title": "should demonstrate consistent response format validation",
          "status": "pending",
          "duration": 0,
          "failureMessages": []
        },
        {
          "title": "should demonstrate data synchronization testing",
          "status": "pending",
          "duration": 0,
          "failureMessages": []
        },
        {
          "title": "should demonstrate cache invalidation testing",
          "status": "pending",
          "duration": 0,
          "failureMessages": []
        },
        {
          "title": "should demonstrate cache dependency tracking",
          "status": "pending",
          "duration": 0,
          "failureMessages": []
        },
        {
          "title": "should demonstrate error handling consistency",
          "status": "pending",
          "duration": 0,
          "failureMessages": []
        },
        {
          "title": "should demonstrate graceful degradation",
          "status": "pending",
          "duration": 0,
          "failureMessages": []
        },
        {
          "title": "should demonstrate mobile viewport detection",
          "status": "pending",
          "duration": 0,
          "failureMessages": []
        },
        {
          "title": "should demonstrate touch interaction testing",
          "status": "pending",
          "duration": 0,
          "failureMessages": []
        },
        {
          "title": "should demonstrate performance measurement",
          "status": "pending",
          "duration": 0,
          "failureMessages": []
        },
        {
          "title": "should demonstrate memory usage tracking",
          "status": "pending",
          "duration": 0,
          "failureMessages": []
        },
        {
          "title": "should demonstrate custom seller profile matcher",
          "status": "pending",
          "duration": 0,
          "failureMessages": []
        },
        {
          "title": "should demonstrate performance threshold matcher",
          "status": "pending",
          "duration": 0,
          "failureMessages": []
        },
        {
          "title": "should cover requirement 10.1: API Endpoint Consistency",
          "status": "pending",
          "duration": 0,
          "failureMessages": []
        },
        {
          "title": "should cover requirement 10.2: Data Synchronization",
          "status": "pending",
          "duration": 0,
          "failureMessages": []
        },
        {
          "title": "should cover requirement 10.3: Cache Invalidation",
          "status": "pending",
          "duration": 0,
          "failureMessages": []
        },
        {
          "title": "should cover requirement 10.4: Error Handling",
          "status": "pending",
          "duration": 0,
          "failureMessages": []
        },
        {
          "title": "should cover requirement 10.5: Mobile Optimization",
          "status": "pending",
          "duration": 0,
          "failureMessages": []
        },
        {
          "title": "should cover requirement 10.6: Performance Benchmarking",
          "status": "pending",
          "duration": 0,
          "failureMessages": []
        }
      ],
      "failureMessage": null
    },
    {
      "name": "Seller Integration Test Suite",
      "path": "/Users/bfguo/Dropbox/Mac/Documents/LinkDAO/app/frontend/src/__tests__/integration/seller/SellerIntegrationTestSuite.test.tsx",
      "passed": 0,
      "failed": 0,
      "pending": 0,
      "duration": 0,
      "tests": [],
      "failureMessage": "  \u001b[1m● \u001b[22mTest suite failed to run\n\n    \u001b[1m\u001b[31mJest encountered an unexpected token\u001b[39m\u001b[22m\n\n    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.\n\n    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.\n\n    By default \"node_modules\" folder is ignored by transformers.\n\n    Here's what you can do:\n     • If you are trying to use ECMAScript Modules, see \u001b[4mhttps://jestjs.io/docs/ecmascript-modules\u001b[24m for how to enable it.\n     • If you are trying to use TypeScript, see \u001b[4mhttps://jestjs.io/docs/getting-started#using-typescript\u001b[24m\n     • To have some of your \"node_modules\" files transformed, you can specify a custom \u001b[1m\"transformIgnorePatterns\"\u001b[22m in your config.\n     • If you need a custom transformation specify a \u001b[1m\"transform\"\u001b[22m option in your config.\n     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the \u001b[1m\"moduleNameMapper\"\u001b[22m config option.\n\n    You'll find more details and examples of these config options in the docs:\n    \u001b[36mhttps://jestjs.io/docs/configuration\u001b[39m\n    For information about custom transformations, see:\n    \u001b[36mhttps://jestjs.io/docs/code-transformation\u001b[39m\n\n    \u001b[1m\u001b[31mDetails:\u001b[39m\u001b[22m\n\n    /Users/bfguo/Dropbox/Mac/Documents/LinkDAO/app/node_modules/wagmi/dist/esm/exports/index.js:5\n    export { WagmiContext, \n    ^^^^^^\n\n    SyntaxError: Unexpected token 'export'\n\n    \u001b[0m \u001b[90m 12 |\u001b[39m \u001b[90m// Onboarding Step Components\u001b[39m\n     \u001b[90m 13 |\u001b[39m \u001b[36mimport\u001b[39m { \u001b[33mWalletConnectStep\u001b[39m } \u001b[36mfrom\u001b[39m \u001b[32m'./onboarding/WalletConnectStep'\u001b[39m\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 14 |\u001b[39m \u001b[36mimport\u001b[39m { \u001b[33mProfileSetupStep\u001b[39m } \u001b[36mfrom\u001b[39m \u001b[32m'./onboarding/ProfileSetupStep'\u001b[39m\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 15 |\u001b[39m \u001b[36mimport\u001b[39m { \u001b[33mVerificationStep\u001b[39m } \u001b[36mfrom\u001b[39m \u001b[32m'./onboarding/VerificationStep'\u001b[39m\u001b[33m;\u001b[39m\n     \u001b[90m 16 |\u001b[39m \u001b[36mimport\u001b[39m { \u001b[33mPayoutSetupStep\u001b[39m } \u001b[36mfrom\u001b[39m \u001b[32m'./onboarding/PayoutSetupStep'\u001b[39m\u001b[33m;\u001b[39m\n     \u001b[90m 17 |\u001b[39m \u001b[36mimport\u001b[39m { \u001b[33mFirstListingStep\u001b[39m } \u001b[36mfrom\u001b[39m \u001b[32m'./onboarding/FirstListingStep'\u001b[39m\u001b[33m;\u001b[39m\u001b[0m\n\n      \u001b[2mat Runtime.createScriptFromCode (\u001b[22m../node_modules/jest-runtime/build/index.js\u001b[2m:1505:14)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/components/Marketplace/Seller/SellerOnboarding.tsx\u001b[2m:14:16)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[0m\u001b[36msrc/__tests__/integration/seller/SellerIntegrationTestSuite.test.tsx\u001b[39m\u001b[0m\u001b[2m:10:27)\u001b[22m\n"
    },
    {
      "name": "Seller Mobile Optimization Tests",
      "path": "/Users/bfguo/Dropbox/Mac/Documents/LinkDAO/app/frontend/src/__tests__/integration/seller/SellerMobileOptimizationTests.test.tsx",
      "passed": 0,
      "failed": 0,
      "pending": 0,
      "duration": 0,
      "tests": [],
      "failureMessage": "  \u001b[1m● \u001b[22mTest suite failed to run\n\n    \u001b[1m\u001b[31mJest encountered an unexpected token\u001b[39m\u001b[22m\n\n    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.\n\n    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.\n\n    By default \"node_modules\" folder is ignored by transformers.\n\n    Here's what you can do:\n     • If you are trying to use ECMAScript Modules, see \u001b[4mhttps://jestjs.io/docs/ecmascript-modules\u001b[24m for how to enable it.\n     • If you are trying to use TypeScript, see \u001b[4mhttps://jestjs.io/docs/getting-started#using-typescript\u001b[24m\n     • To have some of your \"node_modules\" files transformed, you can specify a custom \u001b[1m\"transformIgnorePatterns\"\u001b[22m in your config.\n     • If you need a custom transformation specify a \u001b[1m\"transform\"\u001b[22m option in your config.\n     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the \u001b[1m\"moduleNameMapper\"\u001b[22m config option.\n\n    You'll find more details and examples of these config options in the docs:\n    \u001b[36mhttps://jestjs.io/docs/configuration\u001b[39m\n    For information about custom transformations, see:\n    \u001b[36mhttps://jestjs.io/docs/code-transformation\u001b[39m\n\n    \u001b[1m\u001b[31mDetails:\u001b[39m\u001b[22m\n\n    /Users/bfguo/Dropbox/Mac/Documents/LinkDAO/app/node_modules/wagmi/dist/esm/exports/index.js:5\n    export { WagmiContext, \n    ^^^^^^\n\n    SyntaxError: Unexpected token 'export'\n\n    \u001b[0m \u001b[90m 27 |\u001b[39m     updateProfile\u001b[33m,\u001b[39m\n     \u001b[90m 28 |\u001b[39m     invalidateProfile\u001b[33m,\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 29 |\u001b[39m     isCacheValid\u001b[33m:\u001b[39m profileCacheValid\n     \u001b[90m    |\u001b[39m                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 30 |\u001b[39m   } \u001b[33m=\u001b[39m useSellerProfile(effectiveAddress)\u001b[33m;\u001b[39m\n     \u001b[90m 31 |\u001b[39m\n     \u001b[90m 32 |\u001b[39m   \u001b[90m// Dashboard data\u001b[39m\u001b[0m\n\n      \u001b[2mat Runtime.createScriptFromCode (\u001b[22m../node_modules/jest-runtime/build/index.js\u001b[2m:1505:14)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/hooks/useSellerState.ts\u001b[2m:29:16)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/components/Seller/Mobile/MobileSellerDashboard.tsx\u001b[2m:15:25)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[0m\u001b[36msrc/__tests__/integration/seller/SellerMobileOptimizationTests.test.tsx\u001b[39m\u001b[0m\u001b[2m:10:32)\u001b[22m\n"
    },
    {
      "name": "Seller Cache Invalidation Tests",
      "path": "/Users/bfguo/Dropbox/Mac/Documents/LinkDAO/app/frontend/src/__tests__/integration/seller/SellerCacheInvalidationTests.test.tsx",
      "passed": 0,
      "failed": 0,
      "pending": 0,
      "duration": 0,
      "tests": [],
      "failureMessage": "  \u001b[1m● \u001b[22mTest suite failed to run\n\n    \u001b[1m\u001b[31mJest encountered an unexpected token\u001b[39m\u001b[22m\n\n    Jest failed to parse a file. This happens e.g. when your code or its dependencies use non-standard JavaScript syntax, or when Jest is not configured to support such syntax.\n\n    Out of the box Jest supports Babel, which will be used to transform your files into valid JS based on your Babel configuration.\n\n    By default \"node_modules\" folder is ignored by transformers.\n\n    Here's what you can do:\n     • If you are trying to use ECMAScript Modules, see \u001b[4mhttps://jestjs.io/docs/ecmascript-modules\u001b[24m for how to enable it.\n     • If you are trying to use TypeScript, see \u001b[4mhttps://jestjs.io/docs/getting-started#using-typescript\u001b[24m\n     • To have some of your \"node_modules\" files transformed, you can specify a custom \u001b[1m\"transformIgnorePatterns\"\u001b[22m in your config.\n     • If you need a custom transformation specify a \u001b[1m\"transform\"\u001b[22m option in your config.\n     • If you simply want to mock your non-JS modules (e.g. binary assets) you can stub them out with the \u001b[1m\"moduleNameMapper\"\u001b[22m config option.\n\n    You'll find more details and examples of these config options in the docs:\n    \u001b[36mhttps://jestjs.io/docs/configuration\u001b[39m\n    For information about custom transformations, see:\n    \u001b[36mhttps://jestjs.io/docs/code-transformation\u001b[39m\n\n    \u001b[1m\u001b[31mDetails:\u001b[39m\u001b[22m\n\n    /Users/bfguo/Dropbox/Mac/Documents/LinkDAO/app/node_modules/wagmi/dist/esm/exports/index.js:5\n    export { WagmiContext, \n    ^^^^^^\n\n    SyntaxError: Unexpected token 'export'\n\n    \u001b[0m \u001b[90m 44 |\u001b[39m     gcTime\u001b[33m:\u001b[39m \u001b[35m10\u001b[39m \u001b[33m*\u001b[39m \u001b[35m60\u001b[39m \u001b[33m*\u001b[39m \u001b[35m1000\u001b[39m\u001b[33m,\u001b[39m \u001b[90m// 10 minutes\u001b[39m\n     \u001b[90m 45 |\u001b[39m     retry\u001b[33m:\u001b[39m (failureCount\u001b[33m,\u001b[39m error) \u001b[33m=>\u001b[39m {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 46 |\u001b[39m       \u001b[90m// Don't retry on certain error types\u001b[39m\n     \u001b[90m    |\u001b[39m                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 47 |\u001b[39m       \u001b[36mif\u001b[39m (error \u001b[36minstanceof\u001b[39m \u001b[33mSellerAPIError\u001b[39m \u001b[33m&&\u001b[39m error\u001b[33m.\u001b[39mtype \u001b[33m===\u001b[39m \u001b[33mSellerErrorType\u001b[39m\u001b[33m.\u001b[39m\u001b[33mPERMISSION_ERROR\u001b[39m) {\n     \u001b[90m 48 |\u001b[39m         \u001b[36mreturn\u001b[39m \u001b[36mfalse\u001b[39m\u001b[33m;\u001b[39m\n     \u001b[90m 49 |\u001b[39m       }\u001b[0m\n\n      \u001b[2mat Runtime.createScriptFromCode (\u001b[22m../node_modules/jest-runtime/build/index.js\u001b[2m:1505:14)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/hooks/useUnifiedSeller.ts\u001b[2m:46:16)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22msrc/components/Marketplace/Seller/SellerProfilePage.tsx\u001b[2m:17:27)\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22m\u001b[0m\u001b[36msrc/__tests__/integration/seller/SellerCacheInvalidationTests.test.tsx\u001b[39m\u001b[0m\u001b[2m:10:28)\u001b[22m\n"
    }
  ],
  "performance": {
    "averageTestDuration": 0.046511627906976744,
    "slowestTests": [
      {
        "name": "Seller End To End Integration Tests: should complete full seller onboarding to store creation workflow",
        "duration": 2
      }
    ],
    "fastestTests": [
      {
        "name": "Seller End To End Integration Tests: should complete full seller onboarding to store creation workflow",
        "duration": 2
      }
    ],
    "memoryUsage": {
      "rss": 269533184,
      "heapTotal": 186662912,
      "heapUsed": 164210920,
      "external": 12578654,
      "arrayBuffers": 8994647
    }
  },
  "coverage": null,
  "recommendations": [
    {
      "type": "error",
      "title": "Failed Tests",
      "description": "1 test suite(s) have failing tests that need attention.",
      "action": "Review and fix failing tests before deployment."
    }
  ]
}