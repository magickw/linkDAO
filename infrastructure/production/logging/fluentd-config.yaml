apiVersion: v1
kind: ConfigMap
metadata:
  name: fluentd-config
  namespace: web3-marketplace-prod
data:
  fluent.conf: |
    # Input plugins
    <source>
      @type tail
      @id backend_logs
      path /var/log/containers/*backend*.log
      pos_file /var/log/fluentd-backend.log.pos
      tag kubernetes.backend
      format json
      time_key time
      time_format %Y-%m-%dT%H:%M:%S.%NZ
      keep_time_key true
    </source>
    
    <source>
      @type tail
      @id frontend_logs
      path /var/log/containers/*frontend*.log
      pos_file /var/log/fluentd-frontend.log.pos
      tag kubernetes.frontend
      format json
      time_key time
      time_format %Y-%m-%dT%H:%M:%S.%NZ
      keep_time_key true
    </source>
    
    <source>
      @type tail
      @id postgres_logs
      path /var/log/containers/*postgres*.log
      pos_file /var/log/fluentd-postgres.log.pos
      tag kubernetes.postgres
      format json
      time_key time
      time_format %Y-%m-%dT%H:%M:%S.%NZ
      keep_time_key true
    </source>
    
    <source>
      @type tail
      @id redis_logs
      path /var/log/containers/*redis*.log
      pos_file /var/log/fluentd-redis.log.pos
      tag kubernetes.redis
      format json
      time_key time
      time_format %Y-%m-%dT%H:%M:%S.%NZ
      keep_time_key true
    </source>
    
    # Kubernetes metadata plugin
    <filter kubernetes.**>
      @type kubernetes_metadata
      @id filter_kube_metadata
      kubernetes_url "#{ENV['KUBERNETES_SERVICE_HOST']}:#{ENV['KUBERNETES_SERVICE_PORT_HTTPS']}"
      verify_ssl "#{ENV['KUBERNETES_VERIFY_SSL'] || true}"
      ca_file "#{ENV['KUBERNETES_CA_FILE']}"
      skip_labels false
      skip_container_metadata false
      skip_master_url false
      skip_namespace_metadata false
    </filter>
    
    # Parse application logs
    <filter kubernetes.backend>
      @type parser
      key_name log
      reserve_data true
      remove_key_name_field true
      <parse>
        @type json
        time_key timestamp
        time_format %Y-%m-%dT%H:%M:%S.%LZ
      </parse>
    </filter>
    
    <filter kubernetes.frontend>
      @type parser
      key_name log
      reserve_data true
      remove_key_name_field true
      <parse>
        @type json
        time_key timestamp
        time_format %Y-%m-%dT%H:%M:%S.%LZ
      </parse>
    </filter>
    
    # Add environment and service tags
    <filter kubernetes.**>
      @type record_transformer
      <record>
        environment production
        cluster web3-marketplace
        service ${tag_parts[1]}
      </record>
    </filter>
    
    # Security log filtering
    <filter kubernetes.**>
      @type grep
      <regexp>
        key log
        pattern (authentication|authorization|security|suspicious|attack|breach|unauthorized)
      </regexp>
      tag security.${tag}
    </filter>
    
    # Error log filtering
    <filter kubernetes.**>
      @type grep
      <regexp>
        key level
        pattern (error|fatal|critical)
      </regexp>
      tag error.${tag}
    </filter>
    
    # Performance log filtering
    <filter kubernetes.**>
      @type grep
      <regexp>
        key log
        pattern (slow|timeout|performance|latency)
      </regexp>
      tag performance.${tag}
    </filter>
    
    # Business metrics filtering
    <filter kubernetes.**>
      @type grep
      <regexp>
        key log
        pattern (transaction|order|payment|revenue|user_action)
      </regexp>
      tag business.${tag}
    </filter>
    
    # Output to Elasticsearch
    <match kubernetes.**>
      @type elasticsearch
      @id out_es
      @log_level info
      include_tag_key true
      host "#{ENV['ELASTICSEARCH_HOST'] || 'elasticsearch-service'}"
      port "#{ENV['ELASTICSEARCH_PORT'] || '9200'}"
      path "#{ENV['ELASTICSEARCH_PATH'] || ''}"
      scheme "#{ENV['ELASTICSEARCH_SCHEME'] || 'http'}"
      ssl_verify "#{ENV['ELASTICSEARCH_SSL_VERIFY'] || 'true'}"
      ssl_version "#{ENV['ELASTICSEARCH_SSL_VERSION'] || 'TLSv1_2'}"
      user "#{ENV['ELASTICSEARCH_USER'] || ''}"
      password "#{ENV['ELASTICSEARCH_PASSWORD'] || ''}"
      reload_connections false
      reconnect_on_error true
      reload_on_failure true
      log_es_400_reason false
      logstash_prefix web3-marketplace
      logstash_dateformat %Y.%m.%d
      logstash_format true
      index_name web3-marketplace
      type_name _doc
      <buffer>
        flush_thread_count 8
        flush_interval 5s
        chunk_limit_size 2M
        queue_limit_length 32
        retry_max_interval 30
        retry_forever true
      </buffer>
    </match>
    
    # Output security logs to separate index
    <match security.**>
      @type elasticsearch
      @id out_es_security
      @log_level info
      include_tag_key true
      host "#{ENV['ELASTICSEARCH_HOST'] || 'elasticsearch-service'}"
      port "#{ENV['ELASTICSEARCH_PORT'] || '9200'}"
      path "#{ENV['ELASTICSEARCH_PATH'] || ''}"
      scheme "#{ENV['ELASTICSEARCH_SCHEME'] || 'http'}"
      ssl_verify "#{ENV['ELASTICSEARCH_SSL_VERIFY'] || 'true'}"
      ssl_version "#{ENV['ELASTICSEARCH_SSL_VERSION'] || 'TLSv1_2'}"
      user "#{ENV['ELASTICSEARCH_USER'] || ''}"
      password "#{ENV['ELASTICSEARCH_PASSWORD'] || ''}"
      logstash_prefix web3-marketplace-security
      logstash_dateformat %Y.%m.%d
      logstash_format true
      index_name web3-marketplace-security
      type_name _doc
      <buffer>
        flush_thread_count 2
        flush_interval 1s
        chunk_limit_size 1M
        queue_limit_length 16
        retry_max_interval 30
        retry_forever true
      </buffer>
    </match>
    
    # Output error logs with higher priority
    <match error.**>
      @type elasticsearch
      @id out_es_errors
      @log_level info
      include_tag_key true
      host "#{ENV['ELASTICSEARCH_HOST'] || 'elasticsearch-service'}"
      port "#{ENV['ELASTICSEARCH_PORT'] || '9200'}"
      path "#{ENV['ELASTICSEARCH_PATH'] || ''}"
      scheme "#{ENV['ELASTICSEARCH_SCHEME'] || 'http'}"
      ssl_verify "#{ENV['ELASTICSEARCH_SSL_VERIFY'] || 'true'}"
      ssl_version "#{ENV['ELASTICSEARCH_SSL_VERSION'] || 'TLSv1_2'}"
      user "#{ENV['ELASTICSEARCH_USER'] || ''}"
      password "#{ENV['ELASTICSEARCH_PASSWORD'] || ''}"
      logstash_prefix web3-marketplace-errors
      logstash_dateformat %Y.%m.%d
      logstash_format true
      index_name web3-marketplace-errors
      type_name _doc
      <buffer>
        flush_thread_count 4
        flush_interval 2s
        chunk_limit_size 1M
        queue_limit_length 32
        retry_max_interval 30
        retry_forever true
      </buffer>
    </match>
    
    # Output business metrics
    <match business.**>
      @type elasticsearch
      @id out_es_business
      @log_level info
      include_tag_key true
      host "#{ENV['ELASTICSEARCH_HOST'] || 'elasticsearch-service'}"
      port "#{ENV['ELASTICSEARCH_PORT'] || '9200'}"
      path "#{ENV['ELASTICSEARCH_PATH'] || ''}"
      scheme "#{ENV['ELASTICSEARCH_SCHEME'] || 'http'}"
      ssl_verify "#{ENV['ELASTICSEARCH_SSL_VERIFY'] || 'true'}"
      ssl_version "#{ENV['ELASTICSEARCH_SSL_VERSION'] || 'TLSv1_2'}"
      user "#{ENV['ELASTICSEARCH_USER'] || ''}"
      password "#{ENV['ELASTICSEARCH_PASSWORD'] || ''}"
      logstash_prefix web3-marketplace-business
      logstash_dateformat %Y.%m.%d
      logstash_format true
      index_name web3-marketplace-business
      type_name _doc
      <buffer>
        flush_thread_count 2
        flush_interval 10s
        chunk_limit_size 2M
        queue_limit_length 16
        retry_max_interval 30
        retry_forever true
      </buffer>
    </match>
    
    # Backup output to S3
    <match **>
      @type s3
      @id out_s3_backup
      @log_level info
      aws_key_id "#{ENV['AWS_ACCESS_KEY_ID']}"
      aws_sec_key "#{ENV['AWS_SECRET_ACCESS_KEY']}"
      s3_bucket web3marketplace-logs
      s3_region us-east-1
      path logs/%Y/%m/%d/
      s3_object_key_format %{path}%{time_slice}_%{index}.%{file_extension}
      time_slice_format %Y%m%d-%H
      time_slice_wait 10m
      utc
      <buffer time>
        timekey 3600
        timekey_wait 10m
        timekey_use_utc true
        chunk_limit_size 256m
      </buffer>
      format json
      <inject>
        time_key @timestamp
        time_type string
        time_format %Y-%m-%dT%H:%M:%S.%NZ
      </inject>
    </match>